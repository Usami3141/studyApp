/* App.module.css */
.wrapper {
  height: 100vh; /* 画面高さ */
  display: flex; /* 追加: flexで中央揃え */
  flex-direction: column;
  justify-content: center; /* 横中央 */
  align-items: center;     /* 縦中央 */
  background-color: #f8f8f8;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.8rem 1.5rem;
  margin-bottom: 1rem;
  background-color: #ffffff;
  border-bottom: 1px solid #e5e7eb;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  position: sticky;
  top: 0;
  z-index: 1000;
}

.logo {
  font-size: 1.4rem;
  font-weight: bold;
  margin-right: 1rem;
  color: #3b82f6; /* 青系アクセント */
}

.nav {
  display: flex;
  gap: 1rem;
}

.link {
  text-decoration: none;
  color: #374151; /* dark gray */
  font-weight: 500;
  padding: 0.25rem 0.5rem;
  margin-right: 0.5rem;
  border-radius: 4px;
  transition: background-color 0.2s ease, color 0.2s ease;
}

.link:hover {
  background-color: #e5e7eb;
  color: #1f2937; /* darker gray */
}

.link.active {
  color: #3b82f6;          /* activeリンクの色 */
  font-weight: 600;
  border-bottom: 2px solid #3b82f6;
}


/* メインコンテンツのスタイル */
.body {
  width: 660px;
  height: 560px;
  padding: 20px;
  background-color: #fff;
  border-radius: 10px;
  box-shadow: 0 0 10px rgba(0,0,0,0.1);
  text-align: center;
}

/* 見出しh2のスタイル */
.h2 {
  margin: 0.5rem 0;
  font-size: 2rem;
  color: #333;
}

.h3 {
  margin: 0.5rem 0;
  font-size: 1.5rem;
  color: #333;
}

/* エラー文表示用divのスタイル */
.error {
  display: flex;
  gap: 0.5rem;
  margin-top: 0.5rem;
  align-items: center;
}

/* エラー文のスタイル */
.errortext {
  display: inline-block;
  color: red;
  font-size: 0.8rem;
  margin-right: 0.5rem;
}

/* button.css */
.button {
  padding: 0.5em 1em;
  margin: 0.25em;
  border: 1px solid #d1d5db; 
  border-radius: 6px;
  background-color: #f9fafb; 
  color: #374151;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.06);
  transition:
    background-color 0.3s ease,
    box-shadow 0.2s ease,
    transform 0.1s ease;
}

.button:hover {
  background-color: #f3f4f6; /* hover: slightly darker gray */
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
  transform: translateY(-1px);
}

.button:active {
  transform: translateY(0);
  background-color: #e5e7eb; /* active: darker still */
}

.button:disabled {
  background-color: #f9fafb;
  color: #9ca3af;
  border-color: #e5e7eb;
  cursor: not-allowed;
  box-shadow: none;
}

/* マスを表示するためのボードのスタイル */
.board {
  display: grid;
  grid-template-columns: repeat(3, 50px);
  grid-template-rows: repeat(3, 50px);
  gap: 8px;
  justify-content: center;
  margin: 24px 0;
}

/* マスのスタイル */
.piece {
  width: 50px;
  height: 50px;
  font-size: 2rem;
  display: grid;
  place-items: center; /* 中央揃え */
  text-align: center;
  padding: 0;
  margin: 0;
  border: 1px solid #aaa;
  background: #fff;
  cursor: pointer;
  box-sizing: border-box;
}

.piece:hover {
  background-color: #ddd;
}

.todoListWrapper {
  border: 1px solid #d1d5db;
  border-radius: 8px;
  padding: 0.75rem;
  background-color: #f8f9fa;
  max-height: 300px;
  overflow-y: auto;
}

.todoList {
  max-height: 200px;
  overflow-y: auto;
  padding: 0;
  margin: 0;
  list-style: none;
}

.todoLabel {
  display: flex;
  flex:1;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 0.5rem;
}

.todoItem {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0.75rem 1rem;
  margin-bottom: 0.5rem;
  border: 1px solid #d1d5db;
  border-radius: 6px;
  background-color: #f9fafb;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.04);
  gap: 1rem;
}

.contentArea {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  flex: 1;
  cursor: pointer;
}

.buttonArea {
  display: flex;
  gap: 0.5rem;
}


.todoItem:hover {
  background-color: #f3f4f6;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.06);
}

.todoText {
  flex-grow: 1;
  text-align: left;
  word-break: break-word;
  color: #374151;
  font-size: 1rem;
}

.done {
  color: #9ca3af;
  text-decoration: line-through;
  font-style: normal;
}

/* 入力フォームが複数並ぶ時の親要素 */
.form {
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* 入力フォームのスタイル */
.input {
  width: auto;
  max-width: 320px;
  padding: 0.6em 1em;
  font-size: 1rem;
  border: 1px solid #d1d5db;
  border-radius: 6px;
  background-color: #fff;
  color: #374151;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.03);
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
}

.input::placeholder {
  color: #9ca3af;
}

.input:focus {
  outline: none;
  border-color: #60a5fa; /* blue-400 */
  box-shadow: 0 0 0 3px rgba(96, 165, 250, 0.3);
}

.inputGroup {
  display: flex;
  align-items: center;  /* 縦の中央揃え */
  gap: 0.5rem;
  margin: 0.5rem;
}


/* チェックボックスのラベル全体をクリック可能に */
.custom-checkbox {
  display: inline-flex;
  align-items: center;
  cursor: pointer;
  user-select: none;
  font-size: 1rem;
  color: #374151;
  position: relative; /* input絶対配置の基準 */
}

/* 実際のinputは画面外へ隠す */
.custom-checkbox input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
  margin: 0;
  pointer-events: none; /* 念のため */
}

/* 見た目用のボックス */
.custom-checkbox .checkmark {
  width: 20px;
  height: 20px;
  border: 1.5px solid #d1d5db;
  border-radius: 4px;
  background-color: #fff;
  margin-right: 8px;
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: background-color 0.3s ease, border-color 0.3s ease;
}

/* チェックマークのSVGや文字をここに */
.custom-checkbox .checkmark svg {
  fill: none;
  stroke: #3b82f6; /* blue */
  stroke-width: 2.5;
  display: none;
}

/* チェックされた時のスタイル */
.custom-checkbox input[type="checkbox"]:checked + .checkmark {
  background-color: #3b82f6; /* blue-500 */
  border-color: #3b82f6;
}

/* チェックがついているときにチェックマーク表示 */
.custom-checkbox input[type="checkbox"]:checked + .checkmark svg {
  display: block;
}

/* ホバー時 */
.custom-checkbox:hover .checkmark {
  border-color: #2563eb; /* blue-600 */
}

/* disabled時 */
.custom-checkbox input[type="checkbox"]:disabled + .checkmark {
  background-color: #f3f4f6;
  border-color: #d1d5db;
  cursor: not-allowed;
}

.custom-checkbox input[type="checkbox"]:disabled + .checkmark svg {
  stroke: #9ca3af;
}

.custom-checkbox input[type="checkbox"]:disabled ~ span {
  color: #9ca3af;
  cursor: not-allowed;
}